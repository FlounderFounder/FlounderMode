name: Sync New Terms with Supabase

on:
  push:
    branches: [ main ]
    paths:
      - 'terms/*.json'
      - 'terms-manifest.json'

jobs:
  sync-supabase:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Generate pages and update manifest
      run: node generate-pages.js
      
    - name: Sync new definitions with Supabase
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        # Create a simple script to sync definitions
        cat > sync-definitions.js << 'EOF'
        const { createClient } = require('@supabase/supabase-js');
        const fs = require('fs');
        const path = require('path');
        
        const supabaseUrl = process.env.SUPABASE_URL;
        const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
        
        if (!supabaseUrl || !supabaseKey) {
          console.log('Supabase credentials not found, skipping sync');
          process.exit(0);
        }
        
        const supabase = createClient(supabaseUrl, supabaseKey);
        
        // Read terms manifest
        const manifest = JSON.parse(fs.readFileSync('terms-manifest.json', 'utf8'));
        
        async function syncDefinitions() {
          for (const termFile of manifest.terms) {
            try {
              const termData = JSON.parse(fs.readFileSync(path.join('terms', termFile), 'utf8'));
              
              if (termData.definitions) {
                for (const definition of termData.definitions) {
                  // Check if definition exists in votes table
                  const { data: existingVotes } = await supabase
                    .from('votes')
                    .select('definition_id')
                    .eq('definition_id', definition.id)
                    .limit(1);
                    
                  if (!existingVotes || existingVotes.length === 0) {
                    console.log(`Definition ${definition.id} ready for voting`);
                  }
                }
              }
            } catch (error) {
              console.error(`Error processing ${termFile}:`, error);
            }
          }
        }
        
        syncDefinitions().then(() => {
          console.log('Supabase sync completed');
        }).catch(error => {
          console.error('Sync failed:', error);
          process.exit(1);
        });
        EOF
        
        # Only install Supabase client if credentials are available
        if [ -n "$SUPABASE_URL" ] && [ -n "$SUPABASE_SERVICE_ROLE_KEY" ]; then
          npm install @supabase/supabase-js
          node sync-definitions.js
        else
          echo "Supabase credentials not found, skipping sync"
        fi
        
    - name: Commit updated manifest
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add terms-manifest.json
        git diff --staged --quiet || git commit -m "Update terms manifest after sync"
        git push
